# -*- coding: utf-8 -*-
"""Regressao_Linear_Multipla.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vG_zuPQfKtLwTSnorp8iu5igrZl7UdcZ

# Atividade de Regressão Linear Múltipla

Prever o preço de um carro.

Fonte: [https://www.kaggle.com/mayankpatel14/second-hand-used-cars-data-set-linear-regression](https://www.kaggle.com/mayankpatel14/second-hand-used-cars-data-set-linear-regression)

# Dados

Informações sobre o carro.
"""

import pandas as pd 

dados = pd.read_csv("https://raw.githubusercontent.com/albathalita/regressao_linear_multipla/main/train.csv")

dados.head()

#para saber informações estatísticas

dados.describe()

x = dados.iloc[:,[1,2,3,4,5,6,7,8,9,10]].values  # colunas independente (entrada)
y = dados.iloc[:,11].values  # coluna dependente (saída)

x_train = x[0:25]  # dados para treinamento
x_test = x[25:]  #dados para testar

y_train = y[0:25]  # dados para treinamento
y_test = y[25:]  #dados para testar

"""## Análise de correlação"""

import matplotlib.pyplot as plt
import seaborn as sns

sns.pairplot(dados)
plt.tight_layout()

dados.corr()

# Mapa de calor

sns.heatmap(dados.corr())

"""## Ajuste"""

from sklearn import linear_model
from sklearn.metrics import mean_squared_error, r2_score

regr = linear_model.LinearRegression()

regr.fit(x_train,y_train)

y_pred = regr.predict(x_test)

# Erro quadratico médio da saída
print("Mean squared error: %.2f" % mean_squared_error(y_test, y_pred))

# Qualidade do mapeamento (Ideia do quão bem se encaixa nos dados)

print('Variance score: %.2f' % r2_score(y_test,y_pred))

print('Coefficients: \n', regr.coef_)